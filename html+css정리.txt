html
html : 기반, 구조 - "what"  ------계산기에 들어가야하는 툴
css : 그 구조가 어떻게 보여야 하는지 ex) 글꼴, 크기, 정렬 등------ 가운데 정렬,배경화면, 네모상자크기
javascript : 상호작용, 동작 - 작동하는 것 ----- 버튼 클릭시 계산이 되는 것


1.html 개요
html : hypertext markup language
make this part bold, part a link, a paragraph
bold : <b> 문장 </b> : b + tab
html골자 ---- !+enter 로 자동 생성가능
<!DOCTYPE html>
<html>
 <title>MY FIRST Page </title>
</head>
<body>
 <!-- Content Goes Here -->
</body>
</html>
자동포맷하는방법 : alt+shift+f
<ul></ul> : 순서없는 목록 ----- <li>사용
<ol></ol> : 순서있는 목록 ----- ''
앵커태그(하이퍼링크)<a href="http://www.google.com">I am a link to google!!</a>
이미지<img src=""> ---- 단, 이미지는 클로징이 없음
<div></div> : division ,블록요소 여러 콘텐츠를 하나의 콘텐츠로 구분함 , 한꺼번에 그룹화하여 스타일을 한꺼번에 정리하는데 유리
<span></span> :제네릭요소, 인라인 요소를 독립적으로 떼어내서 사용가능
<hr>: 경계선
<br>:줄바꿈
<sup></sup>:윗첨자
<sub></sub>:아랫첨자
엔티티 코드 : html의 코딩에 혼란을 줄 수 있는 단어들 ex)부등호 등 을 브라우저상에 표시하기 위해서 사용, "&___;"으로 나타남
시맨틱요소 : 마크업에서 강조하거나 꾸밀수 있음. ex)main, nav, aside, header, footer 등...
에밋 : 조금 더 빨리 할 수 있는 자동 코딩방법 ex) >, +,*
폼요소 : 
<textarea></textarea>: text칸 범위 지정. rows와 cols로 크기 조정


2.css개요
css란 html을 표현하는 방식
기본적인 룰 : selector {property: value;}
html에 css를 연결 : html에 입력
<head>
   <title>Forms Demo</title>
   <link rel="stylesheet" href="my_styles.css">
</head>
색깔: rgb(255,255,255); // #(ffffff);
일반텍스트속성: font-weight:400; (글자크기) // text-decoration:blue underline wavy; // line-height: 2.5; (줄간격)// letter-spacing :15px; (글자간격) // text-align: center; (정렬)//
font-size:80px; // font-family:Arial, 대체글자; //
h1{font-family:monospace;
text-align:center;
font-weight:100;
font-size:40px;
letter-spacing:20px;
text-decoration:underline wavy plum;
text-transform:uppercase;
같은 id에 표현적용: #id {color:blue;}
같은 class 에 표현적용: .class{color:blue;}
모든 텍스트 적용: *
css우선순위:id>class>element ( 인라인 요소나 !important는 가장 최상위 우선순위지만 체계를 무시하여 최대한 안쓰는게 좋음)
css 박스: 가로width 세로 height
border(테두리) 한꺼번에 적용: border: width - style - color
border 모깎기: border-radius: 10px; // 50%(정원형) //
padding(패딩):테두리와 콘텐츠간의 공간 // padding: 10px(상하좌우모두 적용) // 5px 10px;(상하 좌우) // 위 오른 아래 왼(시계방향)
margin(여백):테두리 간의 공간>border>padding
display : inline // block // inline-block
css단위: 상대적단위(부모단위,기준이있음): % // em(요소의 font-size기준,단계적으로 적용) //rem(em의 단점보완,최상위요소에 영향을 받음)
불투명도와 알파채널: ---알파채널: 1 투명, 0은 불투명, 하나의 요소의 투명도를 나타낼때 rgba(d,d,d,1) // opacity:전체적 요소으로 투명도를 나타날때
위치(position): 기본값(static:다르게 설정해도 변화없음)// relative:static값 기준으로 움직임 // absolute:부모요소(브라우저 왼쪽 상단)에 대한 상대적으로 움직임. //fixed :absolute랑 비슷하지만 부모요소에 영향을 받지 않음 //sticky:스크롤이 내려가도 위치가 고정됨
전환(transition) :애니메이션처럼 전환됨 ex)hover//  transition-timing:linear;(스무스하게 움직임) , ease-in;(천천히 하다 빠르게 진행), steps(6,end);(6단계에 걸쳐 움직임), cubic-bezier;(앞 뒤로 움직임) 
transition: 요소이름 변화시간 타이밍 
변환(transform): rotate(45deg): 45도 회전// transform-orgin(기준점) // scale(크기변환) //  translate(전환) // skew(각도 변환, x y축) //
배경(background0: cover(이미지가 빈틈없이 매워지게 함)// contain(이미지 전체가 보여지도록 설정)/ position(보여지는 부분 위치 설정) --- 속기법: 포지션 / 사이즈 (꼭 /를 사용)
flexbox: 공간 여백의 할당책임, 크기가 줄거나 늘었을 때 같이 줄거나 늘어남
-flex-diretion: 축의 방향 설정 (기본값:row // row-reverse:본축 방향으로 반댓방향 // column:본축이 상하 방향 // column-reverse: 본축방향으로 반댓방향)
-justify-content: 본축 방향으로 정렬 (기본값:flex-start // 끝방향:flex-end // center:중앙 // space-between:요소 끝 사이 여분삭제 가운데 공간이 생김 // space-around: 요소 양끝에 일정한 공간을 줌 //space-evely: 요소와 요소, 컨테이너 사이에도 동일한 크기의 여백을 줌)
-flex-wrap:줄넘김 설정 (기본값:wrap // wrap-reverse// nowrap)
-align-items: 교차축 방향으로 정렬(기본값:flex-start // flex-end:교착 축 끝에 매치 //center // baseline:베이스라인기준으로 정렬)
-align-content:교차축 방향으로 정렬(flex-start // space-between// center)
-align-self:개별 요소를 적용할 때 적용
-flex-basis:width무시하고 너비의 기준이 됨, 주축방향을 따름
-flex-grow:공간에 맞에 늘어남 //flex-shrink:공간에 맞게 줄어듬
-flex 속기법: flex : flex-grow flex-shrink flex-basis
미디어쿼리:화면 크기에 따라서 알맞게 적용 // @media(min-width:800){h1{color:red}}; 너비가 800이상일 때 h1색상이 빨강색으로 바뀜


3.html+css
테이블요소
--------table
<tr> 가로로 한줄
<th>테이블 제목(굵은 글씨로 표시)
<td> 테이블 안에 셀 각각
border-collapse:separate : 테이블과 셀 테두리 사이의 간격을 둠
border-collapse:collapse : 테이블과 셀 테두리 사이의 간격을 합침
셀크기조정 : height 와 width로 조정
position: sticky;  보여지는 셀 고정
셀 가로 병합: colspan="2"
셀 세로 병합: rowspan="2"

-----box-sizing
box-sizing:content-box
content에 맞춰 박스크기 조정, 
width와 height가 테두리 여백까지 포함하지 않음
   
box-sizing:border-box
border에 맞춰 박스크기 조정, 
width와 height가 테두리 여백까지 포함

---- box
content - padding - border - margin 순서

-----text-shadow
x축 y축 blue color;
(음수는 반대방향으로)


----width
미지정시 상대값 auto적용
절대값으로 지정가능
min-content: 가장 긴 단어의 길이를 최소 너비로 설정
max-content: 줄바꾸기를 하지 않은 문장의 길이를 최소 너비로 설정
fit-content: auto와 max-content 혼합

-----visibility
visible:항상보여짐
hidden:내용이 사라짐
collapse:테이블의 셀 자체가 사라짐

----z-index
가장 위쪽에 위치하게 되는것
만약 부모끼리 이미 z-index가 밀린다면
자식에 아무리 z-index를 많이 줘도 밀리게 됨

----border
border-color:선 색깔/// top right bottom left 순서로 적용
border : 1px solid black; ---- 축약버전, 굵기 스타일 색깔을 한꺼번에 적용

---text
font-size:글자크기
font-weight:줄간격
text-decoration:underline  밑줄

-------position
-static:완전 고정
-relative: 상대적 위치, 부모태그 설정에 따라 유연하게 조정 
-top bottom left right 설정
-absoulte: 절대적인 위치, 웹브라우저 기준으로 조정, 다른요소는 존재하지 않는 것처럼 배치, 
위의 부모태그가 relative라면 같이 움직임.


------background-image
기본으로 repeat(반복)됨
background-repeat:no repeat;

-------레이아웃 만들기
div를 공간박스 색으로 구분하여 기본적인 틀 작성
float: 공간 배치시에 사용, left right 사용, 사용시 다른부분에 clear:both; 로 독립적으로 사용할 것을 명령해줘야함


-------
여러 id 한꺼번에 적용 " , "사용
id 자요소로 적용가능 
#cooking p{
	margin-bottom:10px;
}
#jukumi p{
	margin-bottom:10px;
}
#galaxy p{
	margin-bottom:10px;
}
를
#cooking p,#jukumi p,#galaxy p{
	margin-bottom:12px;
}
로 바꿔 사용 가능